// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgattack.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf {

  /// <summary>Holder for reflection information generated from msgattack.proto</summary>
  public static partial class MsgattackReflection {

    #region Descriptor
    /// <summary>File descriptor for msgattack.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgattackReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9tc2dhdHRhY2sucHJvdG8SD2dvb2dsZS5wcm90b2J1ZiIeCglNc2dBdHRh",
            "Y2sSEQoJc2tpbGxOYW1lGAEgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.MsgAttack), global::Google.Protobuf.MsgAttack.Parser, new[]{ "SkillName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MsgAttack : pb::IMessage<MsgAttack> {
    private static readonly pb::MessageParser<MsgAttack> _parser = new pb::MessageParser<MsgAttack>(() => new MsgAttack());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.MsgattackReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAttack(MsgAttack other) : this() {
      skillName_ = other.skillName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAttack Clone() {
      return new MsgAttack(this);
    }

    /// <summary>Field number for the "skillName" field.</summary>
    public const int SkillNameFieldNumber = 1;
    private string skillName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SkillName {
      get { return skillName_; }
      set {
        skillName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillName != other.SkillName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillName.Length != 0) hash ^= SkillName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SkillName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SkillName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SkillName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgAttack other) {
      if (other == null) {
        return;
      }
      if (other.SkillName.Length != 0) {
        SkillName = other.SkillName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SkillName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
